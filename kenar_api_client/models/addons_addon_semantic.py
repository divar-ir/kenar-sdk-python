# coding: utf-8

"""
    Kenar API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict
from typing import Any, ClassVar, Dict, List, Optional
from kenar_api_client.models.addon_semantic_car_verification_stage import AddonSemanticCarVerificationStage
from kenar_api_client.models.addon_semantic_identity_verification_result import AddonSemanticIdentityVerificationResult
from kenar_api_client.models.addon_semantic_identity_verification_stage import AddonSemanticIdentityVerificationStage
from kenar_api_client.models.addon_semantic_inspection_result import AddonSemanticInspectionResult
from kenar_api_client.models.addon_semantic_new_face_verification_result import AddonSemanticNewFaceVerificationResult
from kenar_api_client.models.addon_semantic_online_reservation_capability import AddonSemanticOnlineReservationCapability
from kenar_api_client.models.addon_semantic_ownership_result import AddonSemanticOwnershipResult
from kenar_api_client.models.addon_semantic_post_verification_result import AddonSemanticPostVerificationResult
from kenar_api_client.models.addons_addon_semantic_payment_method import AddonsAddonSemanticPaymentMethod
from kenar_api_client.models.addons_addon_semantic_status import AddonsAddonSemanticStatus
from typing import Optional, Set
from typing_extensions import Self

class AddonsAddonSemantic(BaseModel):
    """
    این پیام استخراج شده توسط OpenPlatform از اطلاعات معنایی ارائه‌دهنده سرویس است. راهنماها:  - همیشه بررسی کنید که آیا فیلد یا مقدار enum مناسبی قبل از  افزودن وجود دارد.  - مقدار صفر هر enum باید {ENUM_NAME}_UNSPECIFIED باشد.  - مقادیر Enum نباید با هیچ آگهی خاص یا صفت شخص  مطابقت داشته باشد.
    """ # noqa: E501
    car_verification_failure_reason: Optional[AddonSemanticCarVerificationStage] = None
    car_verification_last_successful_stage: Optional[AddonSemanticCarVerificationStage] = None
    identity_verification_failure_reason: Optional[AddonSemanticIdentityVerificationStage] = None
    identity_verification_last_successful_stage: Optional[AddonSemanticIdentityVerificationStage] = None
    identity_verification_result: Optional[AddonSemanticIdentityVerificationResult] = None
    inspection_result: Optional[AddonSemanticInspectionResult] = None
    new_face_verification_result: Optional[AddonSemanticNewFaceVerificationResult] = None
    online_reservation_capability: Optional[AddonSemanticOnlineReservationCapability] = None
    ownership_result: Optional[AddonSemanticOwnershipResult] = None
    payment_method: Optional[AddonsAddonSemanticPaymentMethod] = None
    post_verification_result: Optional[AddonSemanticPostVerificationResult] = None
    status: Optional[AddonsAddonSemanticStatus] = None
    __properties: ClassVar[List[str]] = ["car_verification_failure_reason", "car_verification_last_successful_stage", "identity_verification_failure_reason", "identity_verification_last_successful_stage", "identity_verification_result", "inspection_result", "new_face_verification_result", "online_reservation_capability", "ownership_result", "payment_method", "post_verification_result", "status"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of AddonsAddonSemantic from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of AddonsAddonSemantic from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "car_verification_failure_reason": obj.get("car_verification_failure_reason"),
            "car_verification_last_successful_stage": obj.get("car_verification_last_successful_stage"),
            "identity_verification_failure_reason": obj.get("identity_verification_failure_reason"),
            "identity_verification_last_successful_stage": obj.get("identity_verification_last_successful_stage"),
            "identity_verification_result": obj.get("identity_verification_result"),
            "inspection_result": obj.get("inspection_result"),
            "new_face_verification_result": obj.get("new_face_verification_result"),
            "online_reservation_capability": obj.get("online_reservation_capability"),
            "ownership_result": obj.get("ownership_result"),
            "payment_method": obj.get("payment_method"),
            "post_verification_result": obj.get("post_verification_result"),
            "status": obj.get("status")
        })
        return _obj


