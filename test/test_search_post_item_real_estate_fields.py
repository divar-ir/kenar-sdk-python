# coding: utf-8

"""
    divar_interface/open_platform/chatapi/chatapi.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kenar_api_client.models.search_post_item_real_estate_fields import SearchPostItemRealEstateFields

class TestSearchPostItemRealEstateFields(unittest.TestCase):
    """SearchPostItemRealEstateFields unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchPostItemRealEstateFields:
        """Test SearchPostItemRealEstateFields
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchPostItemRealEstateFields`
        """
        model = SearchPostItemRealEstateFields()
        if include_optional:
            return SearchPostItemRealEstateFields(
                credit = kenar_api_client.models.search_post_item_price.SearchPostItemPrice(
                    mode = '', 
                    value = '', ),
                rent = kenar_api_client.models.search_post_item_price.SearchPostItemPrice(
                    mode = '', 
                    value = '', ),
                daily_rent = '',
                size = 56,
                year = 56,
                has_parking = True,
                has_elevator = True,
                rooms = '',
                floor = 56
            )
        else:
            return SearchPostItemRealEstateFields(
        )
        """

    def testSearchPostItemRealEstateFields(self):
        """Test SearchPostItemRealEstateFields"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
