# coding: utf-8

"""
    Kenar API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kenar_api_client.models.addons_post_addon import AddonsPostAddon

class TestAddonsPostAddon(unittest.TestCase):
    """AddonsPostAddon unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddonsPostAddon:
        """Test AddonsPostAddon
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddonsPostAddon`
        """
        model = AddonsPostAddon()
        if include_optional:
            return AddonsPostAddon(
                app = kenar_api_client.models.apps_app.appsApp(
                    avatar = '', 
                    display = '', 
                    divar_identification_key = '', 
                    service_tags = [
                        'VERIFIED'
                        ], 
                    service_type = 'FUNC_CLICK_AND_COLLECT', 
                    slug = '', 
                    status = kenar_api_client.models.apps_app_status.appsAppStatus(), ),
                linkage = 'POST_DETAILS',
                meta_data = kenar_api_client.models.addons_addon_meta_data.addonsAddonMetaData(
                    app = kenar_api_client.models.apps_app.appsApp(
                        avatar = '', 
                        display = '', 
                        divar_identification_key = '', 
                        service_tags = [
                            'VERIFIED'
                            ], 
                        service_type = 'FUNC_CLICK_AND_COLLECT', 
                        slug = '', 
                        status = kenar_api_client.models.apps_app_status.appsAppStatus(), ), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = '', 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    service_tags = [
                        'VERIFIED'
                        ], 
                    status = 'ACTIVE', ),
                score = '',
                secondary_links = kenar_api_client.models.addons_addon_secondary_links.addonsAddonSecondaryLinks(
                    secondary_linkages = [
                        kenar_api_client.models.addons_addon_secondary_linkage.addonsAddonSecondaryLinkage(
                            position = 'POST_SPEC_HEAD', 
                            widgets = kenar_api_client.models.widgets.widgets(), )
                        ], ),
                selector = kenar_api_client.models.(and)_post_is_selected_by_this_selector_if_all_of_the_following_conditions
matches.(AND) post is selected by this selector if all of the following conditions
matches(
                    brand_models = [
                        ''
                        ], 
                    categories = [
                        ''
                        ], 
                    cities = [
                        ''
                        ], 
                    districts = [
                        ''
                        ], 
                    tokens = [
                        ''
                        ], ),
                semantic = {
                    'key' : ''
                    },
                semantic_data = kenar_api_client.models.addons_addon_semantic.addonsAddonSemantic(
                    car_verification_failure_reason = 'CARVERIFICATIONSTAGE_NOT_STARTED', 
                    car_verification_last_successful_stage = 'CARVERIFICATIONSTAGE_NOT_STARTED', 
                    identity_verification_failure_reason = 'IDENTITYVERIFICATIONSTAGE_NOT_STARTED', 
                    identity_verification_last_successful_stage = 'IDENTITYVERIFICATIONSTAGE_NOT_STARTED', 
                    identity_verification_result = 'FACE_AND_ID_MATCHED', 
                    inspection_result = 'INSPECTION_APPROVED', 
                    new_face_verification_result = 'NEW_FACE_VERIFICATION_FAILED', 
                    ownership_result = 'OWNERSHIP_CONFIRMED', 
                    payment_method = 'SECURE', 
                    post_verification_result = 'POST_INFORMATION_MATCHED', 
                    status = 'SUCCEEDED', ),
                semantic_sensitives = [
                    ''
                    ],
                sensitive_semantic = {
                    'key' : ''
                    },
                token = '',
                widgets = kenar_api_client.models.widgets.widgets(),
                widgets_semantic = kenar_api_client.models.widgets_semantic.widgets_semantic()
            )
        else:
            return AddonsPostAddon(
        )
        """

    def testAddonsPostAddon(self):
        """Test AddonsPostAddon"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
