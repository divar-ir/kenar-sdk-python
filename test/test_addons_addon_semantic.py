# coding: utf-8

"""
    divar_interface/open_platform/chatapi/chatapi.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kenar_api_client.models.addons_addon_semantic import AddonsAddonSemantic

class TestAddonsAddonSemantic(unittest.TestCase):
    """AddonsAddonSemantic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddonsAddonSemantic:
        """Test AddonsAddonSemantic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddonsAddonSemantic`
        """
        model = AddonsAddonSemantic()
        if include_optional:
            return AddonsAddonSemantic(
                payment_method = 'SECURE',
                identity_verification_result = 'FACE_AND_ID_MATCHED',
                post_verification_result = 'POST_INFORMATION_MATCHED',
                status = 'SUCCEEDED',
                identity_verification_last_successful_stage = 'IDENTITYVERIFICATIONSTAGE_NOT_STARTED',
                identity_verification_failure_reason = 'IDENTITYVERIFICATIONSTAGE_NOT_STARTED',
                car_verification_last_successful_stage = 'CARVERIFICATIONSTAGE_NOT_STARTED',
                car_verification_failure_reason = 'CARVERIFICATIONSTAGE_NOT_STARTED',
                ownership_result = 'OWNERSHIP_CONFIRMED',
                inspection_result = 'INSPECTION_APPROVED',
                new_face_verification_result = 'NEW_FACE_VERIFICATION_FAILED'
            )
        else:
            return AddonsAddonSemantic(
        )
        """

    def testAddonsAddonSemantic(self):
        """Test AddonsAddonSemantic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
