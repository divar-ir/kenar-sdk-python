# coding: utf-8

"""
    Kenar API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kenar_api_client.models.addons_button_bar import AddonsButtonBar

class TestAddonsButtonBar(unittest.TestCase):
    """AddonsButtonBar unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddonsButtonBar:
        """Test AddonsButtonBar
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddonsButtonBar`
        """
        model = AddonsButtonBar()
        if include_optional:
            return AddonsButtonBar(
                action = kenar_api_client.models.action.Action(
                    get_dynamic_action = kenar_api_client.models.get_dynamic_action.Get Dynamic Action(
                        data = {"your-internal-id":"something"}, ), 
                    open_direct_link = 'https://your-site.com/some-path', 
                    open_post_manage_page = kenar_api_client.models.open_post_manage_page.Open Post Manage Page(
                        post_token = 'AJIEWcw', ), 
                    open_post_page = kenar_api_client.models.open_post_page.Open Post Page(
                        post_token = 'AJIEWcw', ), 
                    open_server_link = kenar_api_client.models.open_server_link.Open Server Link(
                        data = {"your-internal-id":"something"}, ), ),
                title = ''
            )
        else:
            return AddonsButtonBar(
        )
        """

    def testAddonsButtonBar(self):
        """Test AddonsButtonBar"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
