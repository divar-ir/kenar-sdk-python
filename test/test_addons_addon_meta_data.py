# coding: utf-8

"""
    Kenar API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kenar_api_client.models.addons_addon_meta_data import AddonsAddonMetaData

class TestAddonsAddonMetaData(unittest.TestCase):
    """AddonsAddonMetaData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddonsAddonMetaData:
        """Test AddonsAddonMetaData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddonsAddonMetaData`
        """
        model = AddonsAddonMetaData()
        if include_optional:
            return AddonsAddonMetaData(
                id = '',
                app = kenar_api_client.models.apps_app.appsApp(
                    slug = '', 
                    display = '', 
                    avatar = '', 
                    divar_identification_key = '', 
                    status = kenar_api_client.models.apps_app_status.appsAppStatus(), 
                    service_type = 'FUNC_CLICK_AND_COLLECT', 
                    service_tags = [
                        'VERIFIED'
                        ], ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'ACTIVE',
                service_tags = [
                    'VERIFIED'
                    ]
            )
        else:
            return AddonsAddonMetaData(
        )
        """

    def testAddonsAddonMetaData(self):
        """Test AddonsAddonMetaData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
