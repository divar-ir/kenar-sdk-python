# coding: utf-8

"""
    Kenar API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kenar_api_client.models.finder_search_query import FinderSearchQuery

class TestFinderSearchQuery(unittest.TestCase):
    """FinderSearchQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FinderSearchQuery:
        """Test FinderSearchQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FinderSearchQuery`
        """
        model = FinderSearchQuery()
        if include_optional:
            return FinderSearchQuery(
                brand_model = [
                    ''
                    ],
                credit = kenar_api_client.models.finder_search_query_number_range.finderSearchQueryNumberRange(
                    max = '', 
                    min = '', ),
                only_with_parking = True,
                production_year = kenar_api_client.models.finder_search_query_number_range.finderSearchQueryNumberRange(
                    max = '', 
                    min = '', ),
                rent = kenar_api_client.models.finder_search_query_number_range.finderSearchQueryNumberRange(
                    max = '', 
                    min = '', ),
                rooms = [
                    ''
                    ],
                size = kenar_api_client.models.finder_search_query_number_range.finderSearchQueryNumberRange(
                    max = '', 
                    min = '', ),
                usage = kenar_api_client.models.finder_search_query_number_range.finderSearchQueryNumberRange(
                    max = '', 
                    min = '', )
            )
        else:
            return FinderSearchQuery(
        )
        """

    def testFinderSearchQuery(self):
        """Test FinderSearchQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
