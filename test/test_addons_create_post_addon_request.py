# coding: utf-8

"""
    divar_interface/open_platform/chatapi/chatapi.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kenar_api_client.models.addons_create_post_addon_request import AddonsCreatePostAddonRequest

class TestAddonsCreatePostAddonRequest(unittest.TestCase):
    """AddonsCreatePostAddonRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddonsCreatePostAddonRequest:
        """Test AddonsCreatePostAddonRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddonsCreatePostAddonRequest`
        """
        model = AddonsCreatePostAddonRequest()
        if include_optional:
            return AddonsCreatePostAddonRequest(
                token = '',
                widgets = kenar_api_client.models.widgets.widgets(),
                selector = kenar_api_client.models.(and)_post_is_selected_by_this_selector_if_all_of_the_following_conditions_matches.(AND) post is selected by this selector if all of the following conditions matches(
                    tokens = [
                        ''
                        ], 
                    categories = [
                        ''
                        ], 
                    cities = [
                        ''
                        ], 
                    districts = [
                        ''
                        ], 
                    brand_models = [
                        ''
                        ], ),
                link_in_spec = '',
                notes = '',
                semantic = {
                    'key' : ''
                    },
                semantic_sensitives = [
                    ''
                    ]
            )
        else:
            return AddonsCreatePostAddonRequest(
        )
        """

    def testAddonsCreatePostAddonRequest(self):
        """Test AddonsCreatePostAddonRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
